{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpensiveItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/TotalExpenses.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selectedMonth","onChange","event","onChangeFilter","target","selectedYear","onClick","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","expenseId","id","onDelete","ExpensesList","items","length","deleteExpenseDataHandler","onDeleteExp","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","TotalExpenses","totalAmount","item","Expenses","useState","selectedFilters","setFilters","dateMonths","filteredExpenses","filter","toString","type","prevState","onDeleteExpense","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","e","preventDefault","expenseData","Date","onSaveExpenseData","required","min","step","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","localStorage","getItem","JSON","parse","x","setItem","stringify","App","setExpense","console","log","prevExpenses","remExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06307c47.chunk.js","sourcesContent":["import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import \"./ExpenseFilter.css\";\n\nconst ExpenseFilter = (props) => {\n  const dropdownYearChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value, \"\", \"year\");\n  };\n\n  const dropdownMonthChangeHandler = (event) => {\n    props.onChangeFilter(\"\", event.target.value, \"month\");\n  };\n\n  const clearFilter = (event) => {\n    props.onChangeFilter(\"\", \"\", \"clear\");\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by month & year</label>\n        <div className=\"month-year\">\n          <div className=\"month\">\n            <select\n              value={props.selectedMonth}\n              onChange={dropdownMonthChangeHandler}\n            >\n              <option value=\"\">Month</option>\n              <option value=\"Jan\">Jan</option>\n              <option value=\"Feb\">Feb</option>\n              <option value=\"Mar\">Mar</option>\n              <option value=\"Apr\">Apr</option>\n              <option value=\"May\">May</option>\n              <option value=\"Jun\">Jun</option>\n              <option value=\"Jul\">Jul</option>\n              <option value=\"Aug\">Aug</option>\n              <option value=\"Sep\">Sep</option>\n              <option value=\"Oct\">Oct</option>\n              <option value=\"Nov\">Nov</option>\n              <option value=\"Dec\">Dec</option>\n            </select>\n          </div>\n\n          <div className=\"year\">\n            <select\n              value={props.selectedYear}\n              onChange={dropdownYearChangeHandler}\n            >\n              <option value=\"\">Year</option>\n              <option value=\"2022\">2022</option>\n              <option value=\"2021\">2021</option>\n              <option value=\"2020\">2020</option>\n              <option value=\"2019\">2019</option>\n            </select>\n          </div>\n\n          <div>\n            <button onClick={clearFilter}>\n              <i className=\"fas fa-times \"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseFilter;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-Us\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-Us\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  // change state when something changes\n\n  const deleteHandler = (expenseId) => {\n    props.onDelete(expenseId);\n  };\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n        </div>\n\n        <div className=\"expense-item__flex\">\n          <div className=\"expense-item__price\">&#8377; {props.amount}</div>\n          <button\n            className=\"remove-icon\"\n            onClick={() => {\n              deleteHandler(props.id);\n            }}\n          >\n            <i className=\"far fa-trash-alt\"></i>\n          </button>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpensiveItem\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  const deleteExpenseDataHandler = (expenseId) => {\n    props.onDeleteExp(expenseId);\n    // props.onAddExpense(expenseData);\n  };\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          id={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n          onDelete={deleteExpenseDataHandler}\n        ></ExpenseItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          label={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n        ></ChartBar>\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //sarting jan= 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints}></Chart>;\n};\n\nexport default ExpensesChart;\n","import \"./TotalExpenses.css\";\n\nconst TotalExpenses = (props) => {\n  let totalAmount = 0;\n  props.items.map((item) => (totalAmount += item.amount));\n\n  return (\n    <div className=\"total-expenses\">\n      <div className=\"total-expenses__title\">Total Expense :</div>\n      <div className=\"total-expenses__amount\">\n        &#8377; {totalAmount.toLocaleString()}{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default TotalExpenses;\n","import \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport TotalExpenses from \"./TotalExpenses\";\n\nfunction Expenses(props) {\n  const [selectedFilters, setFilters] = useState({\n    selectedYear: \"\",\n    selectedMonth: \"\",\n  });\n\n  const deleteExpenseHandler = (expenseId) => {\n    props.onDeleteExpense(expenseId);\n  };\n\n  const filterChangeHandler = (selectedYear, selectedMonth, type) => {\n    if (type === \"year\") {\n      setFilters((prevState) => {\n        return { ...prevState, selectedYear: selectedYear };\n      });\n    } else if (type === \"month\") {\n      setFilters((prevState) => {\n        return { ...prevState, selectedMonth: selectedMonth };\n      });\n    } else if (type === \"clear\") {\n      setFilters({\n        selectedMonth: \"\",\n        selectedYear: \"\",\n      });\n    }\n  };\n\n  const dateMonths = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  let filteredExpenses = [];\n  if (\n    selectedFilters.selectedYear === \"\" &&\n    selectedFilters.selectedMonth === \"\"\n  ) {\n    filteredExpenses = props.items;\n  } else {\n    filteredExpenses = props.items.filter((expense) => {\n      const month = dateMonths[expense.date.getMonth()];\n      if (selectedFilters.selectedMonth === \"\") {\n        return (\n          expense.date.getFullYear().toString() === selectedFilters.selectedYear\n        );\n      } else if (selectedFilters.selectedYear === \"\") {\n        return month === selectedFilters.selectedMonth;\n      } else {\n        return (\n          expense.date.getFullYear().toString() ===\n            selectedFilters.selectedYear &&\n          month === selectedFilters.selectedMonth\n        );\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <TotalExpenses items={filteredExpenses}></TotalExpenses>\n\n        <ExpenseFilter\n          selectedYear={selectedFilters.selectedYear}\n          selectedMonth={selectedFilters.selectedMonth}\n          onChangeFilter={filterChangeHandler}\n        ></ExpenseFilter>\n\n        <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\n\n        <ExpensesList\n          onDeleteExp={deleteExpenseHandler}\n          items={filteredExpenses}\n        ></ExpensesList>\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import \"./ExpenseForm.css\";\nimport { useState } from \"react\";\n\nconst ExpenseForm = (props) => {\n  //   const [enteredTitle, setEnteredTitle] = useState(\"\");\n  //   const [enteredAmount, setEnteredAmount] = useState(\"\");\n  //   const [enteredDate, setEnteredDate] = useState(\"\");\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n\n  const titleChangeHandler = (event) => {\n    // setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n\n    setUserInput((prevState) => {\n      return { ...prevState, enteredTitle: event.target.value };\n    });\n  };\n\n  const amountChangeHandler = (event) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n\n    setUserInput((prevState) => {\n      return { ...prevState, enteredAmount: event.target.value };\n    });\n\n    // setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n\n    setUserInput((prevState) => {\n      return { ...prevState, enteredDate: event.target.value };\n    });\n    // setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: +userInput.enteredAmount,\n      date: new Date(userInput.enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n\n    setUserInput({\n      enteredTitle: \"\",\n      enteredAmount: \"\",\n      enteredDate: \"\",\n    });\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            required\n            value={userInput.enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>amount</label>\n          <input\n            type=\"number\"\n            required\n            value={userInput.enteredAmount}\n            onChange={amountChangeHandler}\n            min=\"0.01\"\n            step=\"0.01\"\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            required\n            value={userInput.enteredDate}\n            onChange={dateChangeHandler}\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n          />\n        </div>\n      </div>\n\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nlet DUMMY_EXPENSES = [\n  // {\n  //   id: \"e1\",\n  //   title: \"Car Insurance\",\n  //   amount: 366,\n  //   date: new Date(2021, 10, 5),\n  // },\n  // { id: \"e2\", title: \"School\", amount: 125, date: new Date(2021, 11, 9) },\n  // { id: \"e3\", title: \"Gym\", amount: 1582, date: new Date(2021, 1, 5) },\n  // {\n  //   id: \"e4\",\n  //   title: \"Cyber Security\",\n  //   amount: 20,\n  //   date: new Date(2020, 10, 5),\n  // },\n];\n\nif (localStorage.getItem(\"expenses\")) {\n  DUMMY_EXPENSES = JSON.parse(localStorage.getItem(\"expenses\"));\n  DUMMY_EXPENSES.map(\n    (x) => (x.date = new Date(x.date)) //convert to IST\n  );\n} else {\n  localStorage.setItem(\"expenses\", JSON.stringify(DUMMY_EXPENSES));\n}\n\nconst App = () => {\n  const [expenses, setExpense] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"In App.js\");\n    setExpense((prevExpenses) => {\n      // update localstorage also\n      localStorage.setItem(\n        \"expenses\",\n        JSON.stringify([expense, ...prevExpenses])\n      );\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  const deleteExpenseHandler = (expenseId) => {\n    const remExpenses = expenses.filter((e) => {\n      return e.id !== expenseId;\n    });\n\n    setExpense(() => {\n      localStorage.setItem(\"expenses\", JSON.stringify(remExpenses));\n      return remExpenses;\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses\n        onDeleteExpense={deleteExpenseHandler}\n        items={expenses}\n      ></Expenses>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}